env = require('test_run')
---
...
test_run = env.new()
---
...
test_run:cmd('switch default')
---
- true
...
box.schema.user.grant('guest', 'replication')
---
...
test_run:cmd("create server replica with rpl_master=default, script='replication/replica.lua'")
---
- true
...
test_run:cmd("start server replica")
---
- true
...
test_run:cmd('switch replica')
---
- true
...
while box.space['_priv']:len() < 1 do fiber.sleep(0.001) end
---
...
r = box.info.replication[1]
---
...
r.status == "follow"
---
- true
...
r.lag < 1
---
- true
...
r.idle < 1
---
- true
...
r.vclock[1] > 0
---
- true
...
r.vclock[2] == 0
---
- true
...
r.uuid ~= nil
---
- true
...
box.space._schema:insert({'dup'})
---
- ['dup']
...
test_run:cmd('switch default')
---
- true
...
box.space._schema:insert({'dup'})
---
- ['dup']
...
test_run:cmd('switch replica')
---
- true
...
r = box.info.replication[1]
---
...
r.status == "stopped"
---
- true
...
r.message:match('Duplicate') ~= nil
---
- true
...
box.cfg { replication_source = "" }
---
...
next(box.info.replication) == nil
---
- true
...
test_run:cmd('switch default')
---
- true
...
box.schema.user.revoke('guest', 'replication')
---
...
test_run:cmd("stop server replica")
---
- true
...
test_run:cmd("cleanup server replica")
---
- true
...
