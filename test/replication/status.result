env = require('test_run')
---
...
test_run = env.new()
---
...
test_run:cmd('switch default')
---
- true
...
box.schema.user.grant('guest', 'replication')
---
...
test_run:cmd("create server replica with rpl_master=default, script='replication/replica.lua'")
---
- true
...
test_run:cmd("start server replica")
---
- true
...
test_run:cmd('switch replica')
---
- true
...
while box.space['_priv']:len() < 1 do fiber.sleep(0.001) end
---
...
r = box.info.replication
---
...
r.status == "follow"
---
- true
...
r.lag < 1
---
- true
...
r.idle < 1
---
- true
...
box.space._schema:insert({'dup'})
---
- ['dup']
...
test_run:cmd('switch default')
---
- true
...
box.space._schema:insert({'dup'})
---
- ['dup']
...
test_run:cmd('switch replica')
---
- true
...
r = box.info.replication
---
...
r.status == "stopped"
---
- true
...
r.message:match('Duplicate') ~= nil
---
- true
...
box.cfg { replication_source = "" }
---
...
box.info.replication.status == "off"
---
- true
...
-- Simulate a slow server to test replication info
control_ch = require('fiber').channel(1)
---
...
test_run:cmd("setopt delimiter ';'")
---
- true
...
local digest = require('digest')
slowpoke_loop = function(s, peer)
    control_ch:get()
    local seed = digest.urandom(20)
    local handshake = string.format("Tarantool %-20s %-32s\n%-63s\n",
    "1.6.3-slowpoke", "@megastorage", digest.base64_encode(seed))
    s:write(handshake)
    s:readable()
    control_ch:get()
    s:shutdown()
    s:close()
end;
---
...
test_run:cmd("setopt delimiter ''");
---
- true
...
slowpoke = require('socket').tcp_server('127.0.0.1', 0, slowpoke_loop)
---
...
uri = slowpoke:name()
---
...
box.cfg { replication_source = 'user:pass@'..uri.host..':'..uri.port }
---
...
r = box.info.replication
---
...
r.status == "connect"
---
- true
...
control_ch:put(true)
---
- true
...
require('fiber').sleep(0) -- wait replica to send auth request
---
...
r = box.info.replication
---
...
r.status == "auth"
---
- true
...
r.lag < 1
---
- true
...
r.idle < 1
---
- true
...
--
-- gh-480: check replica reconnect on socket error
--
slowpoke:close()
---
- true
...
control_ch:put("goodbye")
---
- true
...
r = box.info.replication
---
...
r.status == "disconnected" and r.message:match("socket") ~= nil or r.status == 'auth'
---
- true
...
r.idle < 1
---
- true
...
slowpoke = require('socket').tcp_server(uri.host, uri.port, slowpoke_loop)
---
...
control_ch:put(true)
---
- true
...
while box.info.replication.status == 'disconnected' do require('fiber').sleep(0) end
---
...
r = box.info.replication
---
...
r.status == 'connecting' or r.status == 'auth'
---
- true
...
slowpoke:close()
---
- true
...
control_ch:put("goodbye")
---
- true
...
source = box.cfg.replication_source
---
...
box.cfg { replication_source = "" }
---
...
box.cfg { replication_source = source }
---
...
r = box.info.replication
---
...
r.idle < 1
---
- true
...
test_run:cmd('switch default')
---
- true
...
box.schema.user.revoke('guest', 'replication')
---
...
test_run:cmd("stop server replica")
---
- true
...
test_run:cmd("cleanup server replica")
---
- true
...
