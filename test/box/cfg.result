env = require('test_run')
---
...
test_run = env.new()
---
...
test_run:cmd("push filter 'listen: .*' to 'primary: <uri>'")
---
- true
...
test_run:cmd("push filter 'admin: .*' to 'admin: <uri>'")
---
- true
...
test_run:cmd("push filter ".."'\\.lua - internal file.*:[0-9]+: ' to '.lua - internal file...\"]:<line>: '")
---
- true
...
box.cfg.nosuchoption = 1
---
- error: '[string "-- load_cfg.lua - internal file..."]:<line>: Attempt to modify a read-only
    table'
...
cfg_filter(box.cfg)
---
- snapshot_count: 6
  too_long_threshold: 0.5
  slab_alloc_factor: 1.1
  rows_per_wal: 50
  background: false
  readahead: 16320
  sophia:
    page_size: 131072
    memory_limit: 0
    compression_key: 0
    threads: 5
    node_size: 134217728
    compression: none
  primary: <uri>
  logger_nonblock: true
  coredump: false
  wal_mode: write
  panic_on_snap_error: true
  panic_on_wal_error: true
  snapshot_period: 0
  slab_alloc_arena: 0.1
  log_level: 5
  wal_dir_rescan_delay: 2
...
-- must be read-only
box.cfg()
---
- error: '[string "-- load_cfg.lua - internal file..."]:<line>: bad argument #1 to ''pairs''
    (table expected, got nil)'
...
cfg_filter(box.cfg)
---
- snapshot_count: 6
  too_long_threshold: 0.5
  slab_alloc_factor: 1.1
  rows_per_wal: 50
  background: false
  readahead: 16320
  sophia:
    page_size: 131072
    memory_limit: 0
    compression_key: 0
    threads: 5
    node_size: 134217728
    compression: none
  primary: <uri>
  logger_nonblock: true
  coredump: false
  wal_mode: write
  panic_on_snap_error: true
  panic_on_wal_error: true
  snapshot_period: 0
  slab_alloc_arena: 0.1
  log_level: 5
  wal_dir_rescan_delay: 2
...
-- check that cfg with unexpected parameter fails.
box.cfg{sherlock = 'holmes'}
---
- error: 'Incorrect value for option ''sherlock'': unexpected option'
...
-- check that cfg with unexpected type of parameter failes
box.cfg{listen = {}}
---
- error: 'Incorrect value for option ''listen'': should be one of types string, number'
...
box.cfg{wal_dir = 0}
---
- error: 'Incorrect value for option ''wal_dir'': should be of type string'
...
box.cfg{coredump = 'true'}
---
- error: 'Incorrect value for option ''coredump'': should be of type boolean'
...
--------------------------------------------------------------------------------
-- Test of hierarchical cfg type check
--------------------------------------------------------------------------------
box.cfg{slab_alloc_arena = "100500"}
---
- error: 'Incorrect value for option ''slab_alloc_arena'': should be of type number'
...
box.cfg{sophia = "sophia"}
---
- error: 'Incorrect value for option ''sophia'': should be a table'
...
box.cfg{sophia = {threads = "threads"}}
---
- error: 'Incorrect value for option ''sophia.threads'': should be of type number'
...
--------------------------------------------------------------------------------
-- Test of default cfg options
--------------------------------------------------------------------------------
test_run:cmd('create server cfg_tester1 with script = "box/lua/cfg_test1.lua"')
---
- true
...
test_run:cmd("start server cfg_tester1")
---
- true
...
test_run:cmd('switch cfg_tester1')
---
- true
...
box.cfg.slab_alloc_arena, box.cfg.slab_alloc_factor, box.cfg.sophia.threads, box.cfg.sophia.page_size
---
- 1
- 1.1
- 5
- 131072
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server cfg_tester1")
---
- true
...
test_run:cmd("cleanup server cfg_tester1")
---
- true
...
test_run:cmd('create server cfg_tester2 with script = "box/lua/cfg_test2.lua"')
---
- true
...
test_run:cmd("start server cfg_tester2")
---
- true
...
test_run:cmd('switch cfg_tester2')
---
- true
...
box.cfg.slab_alloc_arena, box.cfg.slab_alloc_factor, box.cfg.sophia.threads, box.cfg.sophia.page_size
---
- 0.2
- 1.1
- 5
- 131072
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server cfg_tester2")
---
- true
...
test_run:cmd("cleanup server cfg_tester2")
---
- true
...
test_run:cmd('create server cfg_tester3 with script = "box/lua/cfg_test3.lua"')
---
- true
...
test_run:cmd("start server cfg_tester3")
---
- true
...
test_run:cmd('switch cfg_tester3')
---
- true
...
box.cfg.slab_alloc_arena, box.cfg.slab_alloc_factor, box.cfg.sophia.threads, box.cfg.sophia.page_size
---
- 0.2
- 1.1
- 10
- 131072
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server cfg_tester3")
---
- true
...
test_run:cmd("cleanup server cfg_tester3")
---
- true
...
test_run:cmd('create server cfg_tester4 with script = "box/lua/cfg_test4.lua"')
---
- true
...
test_run:cmd("start server cfg_tester4")
---
- true
...
test_run:cmd('switch cfg_tester4')
---
- true
...
box.cfg.slab_alloc_arena, box.cfg.slab_alloc_factor, box.cfg.sophia.threads, box.cfg.sophia.page_size
---
- 1
- 3.14
- 5
- 1234
...
test_run:cmd("switch default")
---
- true
...
test_run:cmd("stop server cfg_tester4")
---
- true
...
test_run:cmd("cleanup server cfg_tester4")
---
- true
...
test_run:cmd("clear filter")
---
- true
...
